/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jni.h"
#include "jni_md.h"

/* Header for class JNIMain */

#ifndef _Included_JNIMain
#define _Included_JNIMain
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     JNIMain
 * Method:    getStringFromC
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_JNIMain_getStringFromC
  (JNIEnv *, jclass);

/*
* Class:     JNIMain
* Method:    getStringFromC2
* Signature: ()Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_JNIMain_getStringFromC2
(JNIEnv *, jobject);


/*
* Class:     JNIMain
* Method:    accessField
* Signature: ()Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_JNIMain_accessField
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    accessStaticField
* Signature: ()I
*/
JNIEXPORT void JNICALL Java_JNIMain_accessStaticField
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    accessMethod
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_JNIMain_accessMethod
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    accessStaticMethod
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_JNIMain_accessStaticMethod
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    acceessConstructor
* Signature: ()Ljava/util/Date;
*/
JNIEXPORT jobject JNICALL Java_JNIMain_acceessConstructor
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    chineseChars
* Signature: (Ljava/lang/String;)Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_JNIMain_chineseChars
(JNIEnv *, jobject, jstring);

/*
* Class:     JNIMain
* Method:    getArray
* Signature: ([I)V
*/
JNIEXPORT void JNICALL Java_JNIMain_getArray
(JNIEnv *, jobject, jintArray);

/*
* Class:     JNIMain
* Method:    initInt2DArray
* Signature: (I)[[I
*/
JNIEXPORT jobjectArray JNICALL Java_JNIMain_initInt2DArray
(JNIEnv *, jobject, jint);

/*
* Class:     JNIMain
* Method:    initStringArray
* Signature: (I)[Ljava/lang/String;
*/
JNIEXPORT jobjectArray JNICALL Java_JNIMain_initStringArray
(JNIEnv *, jobject, jint);

/*
* Class:     JNIMain
* Method:    createGlobalRef
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_JNIMain_createGlobalRef
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    getglobalRef
* Signature: ()Ljava/lang/String;
*/
JNIEXPORT jstring JNICALL Java_JNIMain_getglobalRef
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    delGlobalRef
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_JNIMain_delGlobalRef
(JNIEnv *, jobject);

/*
* Class:     JNIMain
* Method:    localRef
* Signature: ()V
*/
JNIEXPORT void JNICALL Java_JNIMain_localRef
(JNIEnv *, jobject);


#ifdef __cplusplus
}
#endif
#endif
